# Global Options
options {
    chain_hostnames(no);
    keep_hostname(yes);
    threaded(yes); # enable if using Syslog-NG 3.3.x or greater
    use_fqdn(no); # This should be set to no in high scale environments
    use_dns(yes); # This should be set to no in high scale environments
};# Windows Events from SNARE

rewrite r_snare { 
    subst("MSWinEventLog.+(Security|Application|System).+", "MSWin_$1", value("PROGRAM") flags(global)); 
};
# SNARE sends TAB delimited messages, we want pipes...
rewrite r_snare2pipe { 
    subst("\t", "|", value("MESSAGE") 
    flags(global)
    ); 
};

# Grab Cisco Mnemonics and write program name
filter f_rw_cisco { match('^(%[A-Z]+\-\d\-[0-9A-Z]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches")); };
filter f_rw_cisco_2 { match('^[\*\.]?(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+\d{1,2}\s\d{1,2}:\d{1,2}:\d{1,2}(?:\.\d+)?(?: [A-Z]{3})?: (%[^:]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches")); };
filter f_rw_cisco_3 { match('^\d+[ywdh]\d+[ywdh]: (%[^:]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches")); };
filter f_rw_cisco_4 { match('^\d{6}: [\*\.]?(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+\d{1,2}\s\d{1,2}:\d{1,2}:\d{1,2}(?:\.\d+)?(?: [A-Z]{3})?: (%[^:]+): ([^\n]+)' value("MSGONLY") type("pcre") flags("store-matches")); };

rewrite r_cisco_program {
    set("Cisco_Syslog", value("PROGRAM") condition(filter(f_rw_cisco) or filter(f_rw_cisco_2) or filter(f_rw_cisco_3) or filter(f_rw_cisco_4)));
    set("$1: $2", value("MESSAGE") condition(filter(f_rw_cisco) or filter(f_rw_cisco_2) or filter(f_rw_cisco_3) or filter(f_rw_cisco_4)));
};

# Some guesses to detect VMWare, feel free to add your hostname to the HOST matches below
filter f_vmware {  
    match('vmware|vim\.' value("MSGONLY"))
        or match("^Vpxa:" value("MSGONLY")) 
        or match("^Hostd:" value("MSGONLY")) 
        or match("^Rhttpproxt:" value("MSGONLY")) 
        or match("^Fdm:" value("MSGONLY")) 
        or match("^hostd-probe:" value("MSGONLY"))  
        or match("^vmkernel:" value("MSGONLY"))
        or match("[Vv][Mm][Ww][Aa][Rr][Ee].*" value("HOST"))
        or match("[Vv][Cc][Ee][Nn][Tt][Ee][Rr].*" value("HOST"))
}; 
rewrite r_vmware {
    set("VMWare", value("PROGRAM") condition(filter(f_vmware)));
};

# Cisco Context Directory Agent doesn't send host or program name properly
filter f_CiscoCDA {  
    match('ContextManager: ' value("MSGONLY"))
};  
rewrite r_CiscoCDA {
    set("CiscoCDA", value("PROGRAM") condition(filter(f_CiscoCDA)));
    set("$SOURCEIP", value("HOST") condition(filter(f_CiscoCDA)));
};  

# Capture real program name in case it's missing in the syslog header
filter f_rw_prg { match('(\w+)\[\d+' value("MSGONLY") type("pcre") flags("store-matches")); };
rewrite r_rw_prg {
    set("$1", value("PROGRAM") condition(filter(f_rw_prg)));
};  

# Set Program name for OpenAM events
filter f_rw_openam { match('openam' value("MSGONLY") ); };
rewrite r_rw_openam {
    set("OpenAM", value("PROGRAM") condition(filter(f_rw_openam)));
};

filter f_snmptrapd { program("snmptrapd"); };
parser p_snmptrapd { 
    csv-parser(columns("SNMPTRAP.HOST", "SNMPTRAP.MSG") delimiters(",") flags(greedy, escape-backslash, strip-whitespace));
};
rewrite r_snmptrapd {
    set("${SNMPTRAP.HOST}" value("HOST") condition(filter(f_snmptrapd)));
    set("${SNMPTRAP.MSG}" value("MESSAGE") condition(filter(f_snmptrapd)));
};

source s_t4logs {
    tcp();
    # Use no-multi-line so that java events get read properly (doesn't work with tcp())
    udp(flags(no-multi-line));
    syslog(flags(no-multi-line));
};

destination d_t4logs {
    program("/home/nhannhan159/projects/t4logs/scripts/t4logs.pl"
        log_fifo_size(1000)
        flush_lines(100)
        flush_timeout(1)
        template("$R_YEAR-$R_MONTH-$R_DAY $R_HOUR:$R_MIN:$R_SEC\t$HOST\t$PRI\t$PROGRAM\t$MSGONLY\n")
    );
};

destination df_t4logs {
    file("/var/log/t4logs/DEBUG.log"
        template("$R_YEAR-$R_MONTH-$R_DAY $R_HOUR:$R_MIN:$R_SEC\t$HOST\t$PRI\t$PROGRAM\t$MSGONLY\n")
    ); 
};

log {
    source(s_t4logs);
    # Enable source below if you are sending SNMP Traps to t4logs
    # NOTE: If your /etc/syslog-ng/syslong-ng.conf file does not have "system()" defined in s_src, this will not work.
    # source(s_src);
    rewrite(r_CiscoCDA);
    rewrite(r_rw_prg);
    rewrite(r_rw_openam);
    rewrite(r_vmware);
    rewrite(r_snare);
    rewrite(r_snare2pipe);
    rewrite(r_cisco_program);
    destination(d_t4logs);
    # Optional: Log all events to file
    # destination(df_t4logs);
    # flags(flow-control);
};